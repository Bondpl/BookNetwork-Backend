name: CI Pipeline

on:
  push:
    branches:
      - main
      - test-branch
      - CI
  pull_request:
    branches:
      - main
      - test-branch

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    environment: production  # <-- Use this if secrets are stored in an environment
    container:
      image: openjdk:21-slim

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: database  # <-- This cannot be a secret; it must be static.
          POSTGRES_USER: user  # <-- Set a static user; we'll override it in the steps
          POSTGRES_PASSWORD: pass  # <-- Set a default password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user -d database"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Override Environment Variables with Secrets
        run: |
          export SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/database
          export SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
          export SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
        shell: bash

      - name: Debug Environment Variables
        run: |
            echo "SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}"
            echo "SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}"
            echo "SPRING_DATASOURCE_PASSWORD=**** (hidden for security)"
          - name: Wait for PostgreSQL to be Ready
            run: |
              echo "Waiting for PostgreSQL to be ready..."
                for i in {1..30}; do
                  nc -z localhost 5432 && echo "PostgreSQL is ready!" && exit 0
                  echo "Waiting..."
                  sleep 2
                  done
                  echo "PostgreSQL did not start in time" && exit 1

      - name: Set Executable Permission for Gradle Wrapper
        run: chmod +x gradlew

      - name: Check Database Connection
        run: |
          PGPASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} psql -h localhost -U ${{ secrets.SPRING_DATASOURCE_USERNAME }} -d database -c "SELECT 'Connected to PostgreSQL!'"

      - name: Build with Gradle
        run: ./gradlew clean build
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/database
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}

      - name: Run Tests
        run: ./gradlew test
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/database
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
